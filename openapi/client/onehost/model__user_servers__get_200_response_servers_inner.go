/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the UserServersGet200ResponseServersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserServersGet200ResponseServersInner{}

// UserServersGet200ResponseServersInner struct for UserServersGet200ResponseServersInner
type UserServersGet200ResponseServersInner struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Location *string `json:"location,omitempty"`
	Os *string `json:"os,omitempty"`
	Price *float32 `json:"price,omitempty"`
	Status *string `json:"status,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewUserServersGet200ResponseServersInner instantiates a new UserServersGet200ResponseServersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserServersGet200ResponseServersInner() *UserServersGet200ResponseServersInner {
	this := UserServersGet200ResponseServersInner{}
	return &this
}

// NewUserServersGet200ResponseServersInnerWithDefaults instantiates a new UserServersGet200ResponseServersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserServersGet200ResponseServersInnerWithDefaults() *UserServersGet200ResponseServersInner {
	this := UserServersGet200ResponseServersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UserServersGet200ResponseServersInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserServersGet200ResponseServersInner) SetName(v string) {
	o.Name = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *UserServersGet200ResponseServersInner) SetLocation(v string) {
	o.Location = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *UserServersGet200ResponseServersInner) SetOs(v string) {
	o.Os = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *UserServersGet200ResponseServersInner) SetPrice(v float32) {
	o.Price = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UserServersGet200ResponseServersInner) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *UserServersGet200ResponseServersInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UserServersGet200ResponseServersInner) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200ResponseServersInner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UserServersGet200ResponseServersInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *UserServersGet200ResponseServersInner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o UserServersGet200ResponseServersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserServersGet200ResponseServersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableUserServersGet200ResponseServersInner struct {
	value *UserServersGet200ResponseServersInner
	isSet bool
}

func (v NullableUserServersGet200ResponseServersInner) Get() *UserServersGet200ResponseServersInner {
	return v.value
}

func (v *NullableUserServersGet200ResponseServersInner) Set(val *UserServersGet200ResponseServersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUserServersGet200ResponseServersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUserServersGet200ResponseServersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserServersGet200ResponseServersInner(val *UserServersGet200ResponseServersInner) *NullableUserServersGet200ResponseServersInner {
	return &NullableUserServersGet200ResponseServersInner{value: val, isSet: true}
}

func (v NullableUserServersGet200ResponseServersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserServersGet200ResponseServersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


