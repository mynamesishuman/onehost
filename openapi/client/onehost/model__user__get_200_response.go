/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the UserGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserGet200Response{}

// UserGet200Response struct for UserGet200Response
type UserGet200Response struct {
	UserId *float32 `json:"user_id,omitempty"`
	Balance *float32 `json:"balance,omitempty"`
	Discount *float32 `json:"discount,omitempty"`
}

// NewUserGet200Response instantiates a new UserGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGet200Response() *UserGet200Response {
	this := UserGet200Response{}
	return &this
}

// NewUserGet200ResponseWithDefaults instantiates a new UserGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGet200ResponseWithDefaults() *UserGet200Response {
	this := UserGet200Response{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserGet200Response) GetUserId() float32 {
	if o == nil || IsNil(o.UserId) {
		var ret float32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserGet200Response) GetUserIdOk() (*float32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserGet200Response) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given float32 and assigns it to the UserId field.
func (o *UserGet200Response) SetUserId(v float32) {
	o.UserId = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *UserGet200Response) GetBalance() float32 {
	if o == nil || IsNil(o.Balance) {
		var ret float32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserGet200Response) GetBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *UserGet200Response) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float32 and assigns it to the Balance field.
func (o *UserGet200Response) SetBalance(v float32) {
	o.Balance = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *UserGet200Response) GetDiscount() float32 {
	if o == nil || IsNil(o.Discount) {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserGet200Response) GetDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *UserGet200Response) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *UserGet200Response) SetDiscount(v float32) {
	o.Discount = &v
}

func (o UserGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	return toSerialize, nil
}

type NullableUserGet200Response struct {
	value *UserGet200Response
	isSet bool
}

func (v NullableUserGet200Response) Get() *UserGet200Response {
	return v.value
}

func (v *NullableUserGet200Response) Set(val *UserGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGet200Response(val *UserGet200Response) *NullableUserGet200Response {
	return &NullableUserGet200Response{value: val, isSet: true}
}

func (v NullableUserGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


