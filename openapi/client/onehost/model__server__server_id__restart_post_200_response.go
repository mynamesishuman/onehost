/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the ServerServerIdRestartPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerServerIdRestartPost200Response{}

// ServerServerIdRestartPost200Response struct for ServerServerIdRestartPost200Response
type ServerServerIdRestartPost200Response struct {
	Message *string `json:"message,omitempty"`
	ServerId *int32 `json:"server_id,omitempty"`
}

// NewServerServerIdRestartPost200Response instantiates a new ServerServerIdRestartPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerServerIdRestartPost200Response() *ServerServerIdRestartPost200Response {
	this := ServerServerIdRestartPost200Response{}
	return &this
}

// NewServerServerIdRestartPost200ResponseWithDefaults instantiates a new ServerServerIdRestartPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerServerIdRestartPost200ResponseWithDefaults() *ServerServerIdRestartPost200Response {
	this := ServerServerIdRestartPost200Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ServerServerIdRestartPost200Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServerIdRestartPost200Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ServerServerIdRestartPost200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ServerServerIdRestartPost200Response) SetMessage(v string) {
	o.Message = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ServerServerIdRestartPost200Response) GetServerId() int32 {
	if o == nil || IsNil(o.ServerId) {
		var ret int32
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServerIdRestartPost200Response) GetServerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ServerServerIdRestartPost200Response) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given int32 and assigns it to the ServerId field.
func (o *ServerServerIdRestartPost200Response) SetServerId(v int32) {
	o.ServerId = &v
}

func (o ServerServerIdRestartPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerServerIdRestartPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ServerId) {
		toSerialize["server_id"] = o.ServerId
	}
	return toSerialize, nil
}

type NullableServerServerIdRestartPost200Response struct {
	value *ServerServerIdRestartPost200Response
	isSet bool
}

func (v NullableServerServerIdRestartPost200Response) Get() *ServerServerIdRestartPost200Response {
	return v.value
}

func (v *NullableServerServerIdRestartPost200Response) Set(val *ServerServerIdRestartPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableServerServerIdRestartPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableServerServerIdRestartPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerServerIdRestartPost200Response(val *ServerServerIdRestartPost200Response) *NullableServerServerIdRestartPost200Response {
	return &NullableServerServerIdRestartPost200Response{value: val, isSet: true}
}

func (v NullableServerServerIdRestartPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerServerIdRestartPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


