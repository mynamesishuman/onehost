/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the ServerPurchasePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerPurchasePostRequest{}

// ServerPurchasePostRequest struct for ServerPurchasePostRequest
type ServerPurchasePostRequest struct {
	ServerId *int32 `json:"server_id,omitempty"`
	OsId *int32 `json:"os_id,omitempty"`
}

// NewServerPurchasePostRequest instantiates a new ServerPurchasePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerPurchasePostRequest() *ServerPurchasePostRequest {
	this := ServerPurchasePostRequest{}
	return &this
}

// NewServerPurchasePostRequestWithDefaults instantiates a new ServerPurchasePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerPurchasePostRequestWithDefaults() *ServerPurchasePostRequest {
	this := ServerPurchasePostRequest{}
	return &this
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ServerPurchasePostRequest) GetServerId() int32 {
	if o == nil || IsNil(o.ServerId) {
		var ret int32
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerPurchasePostRequest) GetServerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ServerPurchasePostRequest) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given int32 and assigns it to the ServerId field.
func (o *ServerPurchasePostRequest) SetServerId(v int32) {
	o.ServerId = &v
}

// GetOsId returns the OsId field value if set, zero value otherwise.
func (o *ServerPurchasePostRequest) GetOsId() int32 {
	if o == nil || IsNil(o.OsId) {
		var ret int32
		return ret
	}
	return *o.OsId
}

// GetOsIdOk returns a tuple with the OsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerPurchasePostRequest) GetOsIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OsId) {
		return nil, false
	}
	return o.OsId, true
}

// HasOsId returns a boolean if a field has been set.
func (o *ServerPurchasePostRequest) HasOsId() bool {
	if o != nil && !IsNil(o.OsId) {
		return true
	}

	return false
}

// SetOsId gets a reference to the given int32 and assigns it to the OsId field.
func (o *ServerPurchasePostRequest) SetOsId(v int32) {
	o.OsId = &v
}

func (o ServerPurchasePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerPurchasePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerId) {
		toSerialize["server_id"] = o.ServerId
	}
	if !IsNil(o.OsId) {
		toSerialize["os_id"] = o.OsId
	}
	return toSerialize, nil
}

type NullableServerPurchasePostRequest struct {
	value *ServerPurchasePostRequest
	isSet bool
}

func (v NullableServerPurchasePostRequest) Get() *ServerPurchasePostRequest {
	return v.value
}

func (v *NullableServerPurchasePostRequest) Set(val *ServerPurchasePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerPurchasePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerPurchasePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerPurchasePostRequest(val *ServerPurchasePostRequest) *NullableServerPurchasePostRequest {
	return &NullableServerPurchasePostRequest{value: val, isSet: true}
}

func (v NullableServerPurchasePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerPurchasePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


