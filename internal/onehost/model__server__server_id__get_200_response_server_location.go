/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the ServerServerIdGet200ResponseServerLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerServerIdGet200ResponseServerLocation{}

// ServerServerIdGet200ResponseServerLocation struct for ServerServerIdGet200ResponseServerLocation
type ServerServerIdGet200ResponseServerLocation struct {
	Name *string `json:"name,omitempty"`
	Flag *string `json:"flag,omitempty"`
}

// NewServerServerIdGet200ResponseServerLocation instantiates a new ServerServerIdGet200ResponseServerLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerServerIdGet200ResponseServerLocation() *ServerServerIdGet200ResponseServerLocation {
	this := ServerServerIdGet200ResponseServerLocation{}
	return &this
}

// NewServerServerIdGet200ResponseServerLocationWithDefaults instantiates a new ServerServerIdGet200ResponseServerLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerServerIdGet200ResponseServerLocationWithDefaults() *ServerServerIdGet200ResponseServerLocation {
	this := ServerServerIdGet200ResponseServerLocation{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServerServerIdGet200ResponseServerLocation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServerIdGet200ResponseServerLocation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServerServerIdGet200ResponseServerLocation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServerServerIdGet200ResponseServerLocation) SetName(v string) {
	o.Name = &v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *ServerServerIdGet200ResponseServerLocation) GetFlag() string {
	if o == nil || IsNil(o.Flag) {
		var ret string
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServerIdGet200ResponseServerLocation) GetFlagOk() (*string, bool) {
	if o == nil || IsNil(o.Flag) {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *ServerServerIdGet200ResponseServerLocation) HasFlag() bool {
	if o != nil && !IsNil(o.Flag) {
		return true
	}

	return false
}

// SetFlag gets a reference to the given string and assigns it to the Flag field.
func (o *ServerServerIdGet200ResponseServerLocation) SetFlag(v string) {
	o.Flag = &v
}

func (o ServerServerIdGet200ResponseServerLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerServerIdGet200ResponseServerLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Flag) {
		toSerialize["flag"] = o.Flag
	}
	return toSerialize, nil
}

type NullableServerServerIdGet200ResponseServerLocation struct {
	value *ServerServerIdGet200ResponseServerLocation
	isSet bool
}

func (v NullableServerServerIdGet200ResponseServerLocation) Get() *ServerServerIdGet200ResponseServerLocation {
	return v.value
}

func (v *NullableServerServerIdGet200ResponseServerLocation) Set(val *ServerServerIdGet200ResponseServerLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableServerServerIdGet200ResponseServerLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableServerServerIdGet200ResponseServerLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerServerIdGet200ResponseServerLocation(val *ServerServerIdGet200ResponseServerLocation) *NullableServerServerIdGet200ResponseServerLocation {
	return &NullableServerServerIdGet200ResponseServerLocation{value: val, isSet: true}
}

func (v NullableServerServerIdGet200ResponseServerLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerServerIdGet200ResponseServerLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


