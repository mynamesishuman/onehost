/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the ServerLocationConfigurationsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerLocationConfigurationsGet200Response{}

// ServerLocationConfigurationsGet200Response struct for ServerLocationConfigurationsGet200Response
type ServerLocationConfigurationsGet200Response struct {
	Configurations []ServerLocationConfigurationsGet200ResponseConfigurationsInner `json:"configurations,omitempty"`
}

// NewServerLocationConfigurationsGet200Response instantiates a new ServerLocationConfigurationsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerLocationConfigurationsGet200Response() *ServerLocationConfigurationsGet200Response {
	this := ServerLocationConfigurationsGet200Response{}
	return &this
}

// NewServerLocationConfigurationsGet200ResponseWithDefaults instantiates a new ServerLocationConfigurationsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerLocationConfigurationsGet200ResponseWithDefaults() *ServerLocationConfigurationsGet200Response {
	this := ServerLocationConfigurationsGet200Response{}
	return &this
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *ServerLocationConfigurationsGet200Response) GetConfigurations() []ServerLocationConfigurationsGet200ResponseConfigurationsInner {
	if o == nil || IsNil(o.Configurations) {
		var ret []ServerLocationConfigurationsGet200ResponseConfigurationsInner
		return ret
	}
	return o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerLocationConfigurationsGet200Response) GetConfigurationsOk() ([]ServerLocationConfigurationsGet200ResponseConfigurationsInner, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *ServerLocationConfigurationsGet200Response) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given []ServerLocationConfigurationsGet200ResponseConfigurationsInner and assigns it to the Configurations field.
func (o *ServerLocationConfigurationsGet200Response) SetConfigurations(v []ServerLocationConfigurationsGet200ResponseConfigurationsInner) {
	o.Configurations = v
}

func (o ServerLocationConfigurationsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerLocationConfigurationsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	return toSerialize, nil
}

type NullableServerLocationConfigurationsGet200Response struct {
	value *ServerLocationConfigurationsGet200Response
	isSet bool
}

func (v NullableServerLocationConfigurationsGet200Response) Get() *ServerLocationConfigurationsGet200Response {
	return v.value
}

func (v *NullableServerLocationConfigurationsGet200Response) Set(val *ServerLocationConfigurationsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableServerLocationConfigurationsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableServerLocationConfigurationsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerLocationConfigurationsGet200Response(val *ServerLocationConfigurationsGet200Response) *NullableServerLocationConfigurationsGet200Response {
	return &NullableServerLocationConfigurationsGet200Response{value: val, isSet: true}
}

func (v NullableServerLocationConfigurationsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerLocationConfigurationsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


