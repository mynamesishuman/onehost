/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the UserServersGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserServersGet200Response{}

// UserServersGet200Response struct for UserServersGet200Response
type UserServersGet200Response struct {
	Servers []UserServersGet200ResponseServersInner `json:"servers,omitempty"`
}

// NewUserServersGet200Response instantiates a new UserServersGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserServersGet200Response() *UserServersGet200Response {
	this := UserServersGet200Response{}
	return &this
}

// NewUserServersGet200ResponseWithDefaults instantiates a new UserServersGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserServersGet200ResponseWithDefaults() *UserServersGet200Response {
	this := UserServersGet200Response{}
	return &this
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *UserServersGet200Response) GetServers() []UserServersGet200ResponseServersInner {
	if o == nil || IsNil(o.Servers) {
		var ret []UserServersGet200ResponseServersInner
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserServersGet200Response) GetServersOk() ([]UserServersGet200ResponseServersInner, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *UserServersGet200Response) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []UserServersGet200ResponseServersInner and assigns it to the Servers field.
func (o *UserServersGet200Response) SetServers(v []UserServersGet200ResponseServersInner) {
	o.Servers = v
}

func (o UserServersGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserServersGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	return toSerialize, nil
}

type NullableUserServersGet200Response struct {
	value *UserServersGet200Response
	isSet bool
}

func (v NullableUserServersGet200Response) Get() *UserServersGet200Response {
	return v.value
}

func (v *NullableUserServersGet200Response) Set(val *UserServersGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUserServersGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUserServersGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserServersGet200Response(val *UserServersGet200Response) *NullableUserServersGet200Response {
	return &NullableUserServersGet200Response{value: val, isSet: true}
}

func (v NullableUserServersGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserServersGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


