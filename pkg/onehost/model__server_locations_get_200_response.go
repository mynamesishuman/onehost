/*
1Cent.Host API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onehost

import (
	"encoding/json"
)

// checks if the ServerLocationsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerLocationsGet200Response{}

// ServerLocationsGet200Response struct for ServerLocationsGet200Response
type ServerLocationsGet200Response struct {
	Locations []ServerLocationsGet200ResponseLocationsInner `json:"locations,omitempty"`
}

// NewServerLocationsGet200Response instantiates a new ServerLocationsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerLocationsGet200Response() *ServerLocationsGet200Response {
	this := ServerLocationsGet200Response{}
	return &this
}

// NewServerLocationsGet200ResponseWithDefaults instantiates a new ServerLocationsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerLocationsGet200ResponseWithDefaults() *ServerLocationsGet200Response {
	this := ServerLocationsGet200Response{}
	return &this
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *ServerLocationsGet200Response) GetLocations() []ServerLocationsGet200ResponseLocationsInner {
	if o == nil || IsNil(o.Locations) {
		var ret []ServerLocationsGet200ResponseLocationsInner
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerLocationsGet200Response) GetLocationsOk() ([]ServerLocationsGet200ResponseLocationsInner, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ServerLocationsGet200Response) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []ServerLocationsGet200ResponseLocationsInner and assigns it to the Locations field.
func (o *ServerLocationsGet200Response) SetLocations(v []ServerLocationsGet200ResponseLocationsInner) {
	o.Locations = v
}

func (o ServerLocationsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerLocationsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	return toSerialize, nil
}

type NullableServerLocationsGet200Response struct {
	value *ServerLocationsGet200Response
	isSet bool
}

func (v NullableServerLocationsGet200Response) Get() *ServerLocationsGet200Response {
	return v.value
}

func (v *NullableServerLocationsGet200Response) Set(val *ServerLocationsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableServerLocationsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableServerLocationsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerLocationsGet200Response(val *ServerLocationsGet200Response) *NullableServerLocationsGet200Response {
	return &NullableServerLocationsGet200Response{value: val, isSet: true}
}

func (v NullableServerLocationsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerLocationsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


